{
    "uid": 3,
    "caption": "Agentic RAG Workflow Execution",
    "category": "ai",
    "description": "Tracks each execution of an agent-based retrieval-augmented generation (RAG) workflow including all agent steps, tool usage, decisions, and content flow.",
    "extends": "ai_system_activity",
    "name": "agentic_rag_workflow_execution",
    "profiles": [
        "trace"
    ],
    "attributes": {
        "$include": [
            "profiles/trace.json"
        ],
        "workflow_id": {
            "group": "primary",
            "description": "Unique identifier for the RAG workflow instance.",
            "requirement": "recommended"
        },
        "workflow_name": {
            "group": "primary",
            "description": "Human-readable name of the workflow.",
            "requirement": "recommended"
        },
        "agent_id": {
            "group": "primary",
            "description": "Identifier of the agent orchestrating the workflow.",
            "requirement": "recommended"
        },
        "agent_framework": {
            "group": "context",
            "description": "Framework used to define the agent logic (e.g., LangGraph, CrewAI, AutoGen).",
            "requirement": "recommended"
        },
        "rag_strategy": {
            "group": "context",
            "description": "Strategy applied in the RAG process (simple_rag, multi-hop, hierarchical).",
            "requirement": "recommended"
        }, 
        "retriever_type": {
            "group": "context",
            "description": "Retrieval backend used (e.g., FAISS, Pinecone, Weaviate, Elasticsearch).",
            "requirement": "recommended"
        },
        "retrieved_doc_count": {
            "group": "context",
            "description": "Number of documents retrieved during the RAG process.",
            "requirement": "optional"
        },
        "reranking_model": {
            "group": "context",
            "description": "Name of model used to rerank retrieved documents.",
            "requirement": "optional"
        },
        "embedding_model": {
            "group": "context",
            "description": "Name or version of the embedding model used (e.g., text-embedding-ada-002).",
            "requirement": "recommended"
        },
        "llm_model": {
            "group": "context",
            "description": "The final LLM model used to generate the answer (e.g., gpt-4, mistral-7b).",
            "requirement": "recommended"
        },
        "query_text": {
            "group": "context",
            "description": "The original query submitted to the RAG pipeline.",
            "requirement": "optional"
        },
        "final_answer": {
            "group": "context",
            "description": "The final synthesized response output from the RAG workflow.",
            "requirement": "optional"
        },
        "output_tokens": {
            "group": "context",
            "description": "Number of tokens generated in the final answer.",
            "requirement": "optional"
        },
        "input_tokens": {
            "group": "context",
            "description": "Total input tokens including the query, context, and prompt template.",
            "requirement": "optional"
        },
        "total_latency_ms": {
            "group": "context",
            "description": "Total latency of the workflow in milliseconds.",
            "requirement": "optional"
        },
        "execution_status": {
            "group": "context",
            "description": "Overall outcome (success, partial, failure).",
            "requirement": "recommended"
        },
        "error_message": {
            "group": "context",
            "description": "Error message if the workflow encountered a failure.",
            "requirement": "optional"
        },
        "user": {
            "group": "context",
            "description": "Human user or calling agent",
            "requirement": "optional"
        },
        "session": {
            "group": "context",
            "description": "Session for context grouping (e.g., for analytics or tracing).",
            "requirement": "optional"
        },
        "region": {
            "group": "context",
            "description": "Cloud or physical region of execution (e.g., us-west-2, eu-central-1).",
            "requirement": "optional"
        },
        "workflow_steps": {
            "group": "primary",
            "description": "A list of individual, traceable steps executed during the RAG workflow.",
            "requirement": "recommended"
        }
    }
}