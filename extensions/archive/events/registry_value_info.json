{
    "caption": "Registry Value Info",
    "description": "Registry Value Info events report information about discovered Windows registry values.",
    "name": "registry_value_info",
    "attributes": {
        "reg_value": {
            "description": "The registry value that pertains to the event.",
            "group": "primary",
            "requirement": "required",
            "type": "registry_value",
            "caption": "Registry Value"
        },
        "activity_id": {
            "enum": {
                "1": {
                    "caption": "Exists",
                    "description": "The target was found."
                },
                "2": {
                    "caption": "Partial",
                    "description": "The target was partially found."
                },
                "3": {
                    "caption": "Does not exist",
                    "description": "The target was not found."
                },
                "4": {
                    "caption": "Error",
                    "description": "The discovery attempt failed."
                },
                "5": {
                    "caption": "Unsupported",
                    "description": "Discovery of the target was not supported."
                },
                "0": {
                    "caption": "Unknown",
                    "description": "The event activity is unknown."
                },
                "99": {
                    "caption": "Other",
                    "description": "The event activity is not mapped. See the <code>activity_name</code> attribute, which contains a data source specific value."
                }
            },
            "requirement": "required",
            "caption": "Activity ID",
            "description": "The normalized identifier of the activity that triggered the event.",
            "sibling": "activity_name",
            "type": "integer_t"
        },
        "device": {
            "requirement": "recommended",
            "caption": "Device",
            "description": "An addressable device, computer system or host.",
            "type": "device"
        },
        "actor": {
            "requirement": "optional",
            "caption": "Actor",
            "description": "The actor object describes details about the user/role/process that was the source of the activity.",
            "type": "actor"
        },
        "enrichments": {
            "group": "context",
            "requirement": "optional",
            "caption": "Enrichments",
            "description": "The additional information from an external data source, which is associated with the event or a finding. For example add location information for the IP address in the DNS answers:</p><code>[{\"name\": \"answers.ip\", \"value\": \"92.24.47.250\", \"type\": \"location\", \"data\": {\"city\": \"Socotra\", \"continent\": \"Asia\", \"coordinates\": [-25.4153, 17.0743], \"country\": \"YE\", \"desc\": \"Yemen\"}}]</code>",
            "is_array": true,
            "type": "enrichment"
        },
        "message": {
            "group": "primary",
            "requirement": "recommended",
            "caption": "Message",
            "description": "The description of the event/finding, as defined by the source.",
            "type": "string_t"
        },
        "metadata": {
            "group": "context",
            "requirement": "required",
            "caption": "Metadata",
            "description": "The metadata associated with the event or a finding.",
            "type": "metadata"
        },
        "observables": {
            "group": "primary",
            "requirement": "optional",
            "caption": "Observables",
            "description": "The observables associated with the event or a finding.",
            "is_array": true,
            "type": "observable"
        },
        "raw_data": {
            "group": "context",
            "requirement": "optional",
            "caption": "Raw Data",
            "description": "The event data as received from the event source.",
            "type": "json_t"
        },
        "severity": {
            "group": "classification",
            "requirement": "optional",
            "caption": "Severity",
            "description": "The event/finding severity, normalized to the caption of the severity_id value. In the case of 'Other', it is defined by the source.",
            "type": "string_t"
        },
        "severity_id": {
            "group": "classification",
            "requirement": "required",
            "caption": "Severity ID",
            "description": "<p>The normalized identifier of the event/finding severity.</p>The normalized severity is a measurement the effort and expense required to manage and resolve an event or incident. Smaller numerical values represent lower impact events, and larger numerical values represent higher impact events.",
            "enum": {
                "99": {
                    "caption": "Other",
                    "description": "The event/finding severity is not mapped. See the <code>severity</code> attribute, which contains a data source specific value."
                },
                "0": {
                    "caption": "Unknown",
                    "description": "The event severity is not known."
                },
                "1": {
                    "caption": "Informational",
                    "description": "Informational message. No action required."
                },
                "2": {
                    "caption": "Low",
                    "description": "The user decides if action is needed."
                },
                "3": {
                    "caption": "Medium",
                    "description": "Action is required but the situation is not serious at this time."
                },
                "4": {
                    "caption": "High",
                    "description": "Action is required immediately."
                },
                "5": {
                    "caption": "Critical",
                    "description": "Action is required immediately and the scope is broad."
                },
                "6": {
                    "caption": "Fatal",
                    "description": "An error occurred but it is too late to take remedial action."
                }
            },
            "sibling": "severity",
            "type": "integer_t"
        },
        "status": {
            "group": "primary",
            "requirement": "optional",
            "caption": "Status",
            "description": "The event status, normalized to the caption of the status_id value. In the case of 'Other', it is defined by the event source.",
            "type": "string_t"
        },
        "status_code": {
            "group": "primary",
            "requirement": "optional",
            "caption": "Status Code",
            "description": "The event status code, as reported by the event source.<br /><br />For example, in a Windows Failed Authentication event, this would be the value of 'Failure Code', e.g. 0x18.",
            "type": "string_t"
        },
        "status_detail": {
            "group": "primary",
            "requirement": "optional",
            "caption": "Status Details",
            "description": "The status details contains additional information about the event/finding outcome.",
            "type": "string_t"
        },
        "status_id": {
            "group": "primary",
            "requirement": "recommended",
            "caption": "Status ID",
            "description": "The normalized identifier of the event status.",
            "enum": {
                "99": {
                    "caption": "Other",
                    "description": "The event status is not mapped. See the <code>status</code> attribute, which contains a data source specific value."
                },
                "0": {
                    "caption": "Unknown",
                    "description": "The status is unknown."
                },
                "1": {
                    "caption": "Success"
                },
                "2": {
                    "caption": "Failure"
                }
            },
            "sibling": "status",
            "type": "integer_t"
        },
        "unmapped": {
            "group": "context",
            "requirement": "optional",
            "caption": "Unmapped Data",
            "description": "The attributes that are not mapped to the event schema. The names and values of those attributes are specific to the event source.",
            "type": "object"
        },
        "activity_name": {
            "requirement": "optional",
            "caption": "Activity",
            "description": "The event activity name, as defined by the activity_id.",
            "type": "string_t"
        },
        "category_name": {
            "requirement": "optional",
            "caption": "Category",
            "description": "The event category name, as defined by category_uid value.",
            "type": "string_t"
        },
        "class_name": {
            "requirement": "optional",
            "caption": "Class",
            "description": "The event class name, as defined by class_uid value.",
            "type": "string_t"
        },
        "type_name": {
            "requirement": "optional",
            "caption": "Type Name",
            "description": "The event/finding type name, as defined by the type_uid.",
            "type": "string_t"
        },
        "count": {
            "requirement": "optional",
            "caption": "Count",
            "description": "The number of times that events in the same logical group occurred during the event <strong>Start Time</strong> to <strong>End Time</strong> period.",
            "type": "integer_t",
            "default": 1
        },
        "duration": {
            "requirement": "optional",
            "caption": "Duration",
            "description": "The event duration or aggregate time, the amount of time the event covers from <code>start_time</code> to <code>end_time</code> in milliseconds.",
            "type": "integer_t"
        },
        "end_time": {
            "description": "The end time of a time period, or the time of the most recent event included in the aggregate event.",
            "requirement": "optional",
            "caption": "End Time",
            "type": "timestamp_t"
        },
        "start_time": {
            "description": "The start time of a time period, or the time of the least recent event included in the aggregate event.",
            "requirement": "optional",
            "caption": "Start Time",
            "type": "timestamp_t"
        },
        "time": {
            "requirement": "required",
            "caption": "Event Time",
            "description": "The normalized event occurrence time or the finding creation time.",
            "type": "timestamp_t"
        },
        "timezone_offset": {
            "requirement": "recommended",
            "caption": "Timezone Offset",
            "description": "The number of minutes that the reported event <code>time</code> is ahead or behind UTC, in the range -1,080 to +1,080.",
            "type": "integer_t"
        },
        "cloud": {
            "requirement": "required",
            "group": "primary",
            "caption": "Cloud",
            "description": "Describes details about the Cloud environment where the event was originally created or logged.",
            "type": "cloud"
        },
        "api": {
            "requirement": "optional",
            "group": "context",
            "caption": "API Details",
            "description": "Describes details about a typical API (Application Programming Interface) call.",
            "type": "api"
        },
        "data": {
            "description": "Additional data that is associated with the event.",
            "requirement": "optional",
            "caption": "Data",
            "type": "json_t",
            "@deprecated": {
                "since": "1.1.0",
                "message": "Deprecated in upgrade from ocsf-0.31.1 to qdm-1.1.0"
            }
        },
        "confidence": {
            "group": "classification",
            "requirement": "optional",
            "caption": "Confidence",
            "description": "The confidence of the reported event severity as a percentage: 0%-100%.",
            "type": "integer_t",
            "@deprecated": {
                "since": "1.1.0",
                "message": "Deprecated in upgrade from ocsf-0.31.1 to qdm-1.1.0"
            }
        },
        "record_id": {
            "description": "Unique idenifier for the event",
            "group": "primary",
            "requirement": "required",
            "caption": "Record ID",
            "type": "string_t"
        },
        "command_uid": {
            "description": "The unique identifier of the discovery command that pertains to this event.",
            "group": "primary",
            "requirement": "required",
            "caption": "Command UID",
            "type": "string_t",
            "@deprecated": {
                "since": "1.1.0",
                "message": "Deprecated in upgrade from ocsf-0.31.1 to qdm-1.1.0"
            }
        },
        "scan_uid": {
            "description": "The unique identifier of the discovery scan request that pertains to this event.",
            "group": "primary",
            "requirement": "optional",
            "caption": "Scan UID",
            "type": "string_t",
            "@deprecated": {
                "since": "1.1.0",
                "message": "Deprecated in upgrade from ocsf-0.31.1 to qdm-1.1.0"
            }
        }
    },
    "category": "discovery",
    "@deprecated": {
        "since": "1.2.0",
        "message": "Renamed to events.registry_value_query"
    }
}