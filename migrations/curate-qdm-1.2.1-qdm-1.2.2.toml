new_repo = "../ocsf/qdm"
old_repo = "../ocsf/qdm-prev"

log_level = "DEBUG"

# Update paths
#   Any matching paths below will be updated in the schema patch. The "new"
#   version of these paths will win out over the old.
update = [
    "?.?.description", # The community is better at updating descriptions and captions than Query
    "*.attributes.?.description", # The community is better at updating descriptions and captions than Query
    "*.caption", 
    "*.constraints.?", # QDM doesn't enforce constraints
    "*.attributes.?.requirement", # QDM doesn't enforce OCSF requirements
    "events.user_info",
    "events.registry_key_info",
    "events.prefetch_info",
    "events.registry_value_info",
    "events.peripheral_device_info",
    "objects.network_proxy.observable",
    "objects.network_endpoint.observable",
	"?.?.attributes.unmapped.type",
	"?.?.attributes.?.enum.-1",
	"?.?.attributes.?.enum.-1.*",
]

# Preserve paths
#   Any matching paths below will be preserved in the schema patch. In other
#   words, the "old" version of the schema will be used.
preserve = [
    #"*.type", # Not so sure about this one...
    #"?.?.attributes.?.enum.*", # Keep all enums by default
    "*.@deprecated.*", # Don't update @deprecated messages
]

# Deprecate paths
#   Any matching paths below will be deprecated in the schema patch. They will
#   be preserved in the new schema, but with an @deprecated annotation.
deprecate = [
    #"events.email_delivery_activity.*",
    "?.?.attributes.*", # Deprecate all attributes by default
    "?.?", # Deprecate all removed records by default
]

# Ignore paths
#   Any matching paths below will be ignored and not included in the schema
#   patch.
ignore = [
    "*.$include",
    "?.?.profiles",
    "?.?.attributes.?.profile",
    "?.?.extension", # This is added by Query and changes based on the order of extensions
    "?.?.extends",
    "?.?.uid",

    # Dynamically generated schema elements
    "objects.observable.attributes.type_id.enum.*",
    "events.?.attributes.class_uid",
    "events.?.attributes.class_uid.*",
    "events.?.attributes.type_uid",
    "events.?.attributes.type_uid.*",
    "events.?.attributes.category_uid",
    "events.?.attributes.category_uid.*",
]

# Clarify paths
#   Any matching paths below will be flagged for clarification. The preserve and
#   order steps curation will halt if anything is flagged in a schema patch.
#clarify = ["*.type"]

# No Clarify paths
#   Any matching paths below will NOT be flagged for clarification. This list
#   overrules the clarify list above.
#no_clarify = ["?.?.attributes.type_uid.type"]

# Rename paths
[rename]
#"events.user_info" = "events.user_query"
#"events.registry_key_info" = "events.registry_key_query"
#"events.prefetch_info" = "events.prefetch_query"
