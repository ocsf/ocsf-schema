{
  "caption": "Access Analysis Result",
  "description": "The Access Analysis Result object describes comprehensive analysis results for access permissions granted to identities, accounts, or services.",
  "extends": "object",
  "name": "access_analysis_result",
  "attributes": {
    "access_level": {
      "description": "The generalized access level or permission scope granted to the identity through the analyzed policy configuration. Common examples include Read, Write, List, Delete, Admin, or custom permission levels.",
      "requirement": "recommended"
    },
    "access_type": {
      "description": "The type or category of access being granted to the identity. This describes the nature of the access relationship, such as cross-account access, public access, federated access, or third-party integration access. Examples include 'Cross-Account', 'Public', 'Federated', 'Service-to-Service', etc.",
      "requirement": "optional"
    },
    "accessor": {
      "description": "The identity, account, or service that is granted access through the analyzed policy configuration. This identifies the specific entity that can exercise the permissions and helps assess the access relationship and potential security implications. Examples include user accounts, service principals, roles, account identifiers, or system identities.",
      "requirement": "required"
    },
    "condition_keys": {
      "description": "The condition keys and their values that constrain when and how the granted access can be exercised. These conditions define the circumstances under which the access relationship is valid and the privileges can be used. Examples: IP address restrictions like 'aws:SourceIp:192.0.2.0/24', time-based constraints like 'aws:RequestedRegion:us-east-1', MFA requirements like 'aws:MultiFactorAuthPresent:true', or custom conditions based on resource tags and request context.",
      "requirement": "optional"
    },
    "granted_privileges": {
      "description": "The specific privileges, actions, or permissions that are granted through the analyzed access relationship. This includes the actual operations that the accessor can perform on the target resource. Examples: AWS actions like 'sts:AssumeRole', 's3:GetObject', 'ec2:DescribeInstances'; Azure actions like 'Microsoft.Storage/storageAccounts/read'; or GCP permissions like 'storage.objects.get'.",
      "requirement": "optional"
    },
    "policy_restrictions": {
      "description": "Details about supplementary restrictions and guardrails that may limit the granted access, applied through additional policy types such as Resource Control Policies (RCPs) and Service Control Policies (SCPs) in AWS, or other policy constraints.",
      "requirement": "optional"
    }
  }
}